// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generate aqua-enterprise-enforcer.json 1`] = `
"// Generated by cdk-import
import * as cdk from '@aws-cdk/core';

/**
 * A resource provider for Aqua Enterprise Enforcer.
 *
 * @schema CfnEnforcerProps
 */
export interface CfnEnforcerProps {
  /**
   * EKS cluster name
   *
   * @schema CfnEnforcerProps#ClusterID
   */
  readonly clusterId?: string;

  /**
   * Secrets Manager ARN for kubeconfig file
   *
   * @schema CfnEnforcerProps#KubeConfig
   */
  readonly kubeConfig?: string;

  /**
   * IAM to use with EKS cluster authentication, if not resource execution role will be used
   *
   * @schema CfnEnforcerProps#RoleArn
   */
  readonly roleArn?: string;

  /**
   * Namespace to use with helm. Created if doesn't exist and default will be used if not provided
   *
   * @schema CfnEnforcerProps#Namespace
   */
  readonly namespace?: string;

  /**
   * Name for the helm release
   *
   * @schema CfnEnforcerProps#Name
   */
  readonly name?: string;

  /**
   * Custom Values can optionally be specified
   *
   * @schema CfnEnforcerProps#Values
   */
  readonly values?: any;

  /**
   * String representation of a values.yaml file
   *
   * @schema CfnEnforcerProps#ValueYaml
   */
  readonly valueYaml?: string;

  /**
   * Version can be specified, if not latest will be used
   *
   * @schema CfnEnforcerProps#Version
   */
  readonly version?: string;

  /**
   * Custom Value Yaml file can optionally be specified
   *
   * @schema CfnEnforcerProps#ValueOverrideURL
   */
  readonly valueOverrideUrl?: string;

  /**
   * Timeout for resource provider. Default 60 mins
   *
   * @schema CfnEnforcerProps#TimeOut
   */
  readonly timeOut?: number;

  /**
   * For network connectivity to Cluster inside VPC
   *
   * @schema CfnEnforcerProps#VPCConfiguration
   */
  readonly vpcConfiguration?: CfnEnforcerPropsVpcConfiguration;

}

/**
 * Converts an object of type 'CfnEnforcerProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnEnforcerProps(obj: CfnEnforcerProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'ClusterID': obj.clusterId,
    'KubeConfig': obj.kubeConfig,
    'RoleArn': obj.roleArn,
    'Namespace': obj.namespace,
    'Name': obj.name,
    'Values': obj.values,
    'ValueYaml': obj.valueYaml,
    'Version': obj.version,
    'ValueOverrideURL': obj.valueOverrideUrl,
    'TimeOut': obj.timeOut,
    'VPCConfiguration': toJson_CfnEnforcerPropsVpcConfiguration(obj.vpcConfiguration),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * For network connectivity to Cluster inside VPC
 *
 * @schema CfnEnforcerPropsVpcConfiguration
 */
export interface CfnEnforcerPropsVpcConfiguration {
  /**
   * Specify one or more security groups
   *
   * @schema CfnEnforcerPropsVpcConfiguration#SecurityGroupIds
   */
  readonly securityGroupIds?: string[];

  /**
   * Specify one or more subnets
   *
   * @schema CfnEnforcerPropsVpcConfiguration#SubnetIds
   */
  readonly subnetIds?: string[];

}

/**
 * Converts an object of type 'CfnEnforcerPropsVpcConfiguration' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnEnforcerPropsVpcConfiguration(obj: CfnEnforcerPropsVpcConfiguration | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'SecurityGroupIds': obj.securityGroupIds?.map(y => y),
    'SubnetIds': obj.subnetIds?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * A CloudFormation \`Aqua::Enterprise::Enforcer\`
 *
 * @cloudformationResource Aqua::Enterprise::Enforcer
 * @stability external
 * @link https://github.com/aquasecurity/aqua-helm.git
 */
export class CfnEnforcer extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = \\"Aqua::Enterprise::Enforcer\\";

  /**
   * Resource props.
   */
  public readonly props: CfnEnforcerProps;

  /**
   * Attribute \`Aqua::Enterprise::Enforcer.ID\`
   * @link https://github.com/aquasecurity/aqua-helm.git
   */
  public readonly attrId: string;

  /**
   * Create a new \`Aqua::Enterprise::Enforcer\`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: cdk.Construct, id: string, props: CfnEnforcerProps) {
    super(scope, id, { type: CfnEnforcer.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnEnforcerProps(props)! });

    this.props = props;

    this.attrId = cdk.Token.asString(this.getAtt('ID'));
  }
}"
`;

exports[`generate datadog.json 1`] = `
"// Generated by cdk-import
import * as cdk from '@aws-cdk/core';

/**
 * Datadog SLO 1.0.0
 *
 * @schema CfnSloProps
 */
export interface CfnSloProps {
  /**
   * @schema CfnSloProps#Creator
   */
  readonly creator?: Creator;

  /**
   * Description of the slo
   *
   * @schema CfnSloProps#Description
   */
  readonly description?: string;

  /**
   * A list of (up to 20) monitor groups that narrow the scope of a monitor service level objective.
   *
   * @schema CfnSloProps#Groups
   */
  readonly groups?: string[];

  /**
   * A list of monitor ids that defines the scope of a monitor service level objective. Required if type is monitor.
   *
   * @schema CfnSloProps#MonitorIds
   */
  readonly monitorIds?: number[];

  /**
   * Name of the slo
   *
   * @schema CfnSloProps#Name
   */
  readonly name: string;

  /**
   * @schema CfnSloProps#Query
   */
  readonly query?: Query;

  /**
   * Tags associated with the slo
   *
   * @schema CfnSloProps#Tags
   */
  readonly tags?: string[];

  /**
   * @schema CfnSloProps#Thresholds
   */
  readonly thresholds: Threshold[];

  /**
   * The type of the slo
   *
   * @schema CfnSloProps#Type
   */
  readonly type: CfnSloPropsType;

}

/**
 * Converts an object of type 'CfnSloProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnSloProps(obj: CfnSloProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Creator': toJson_Creator(obj.creator),
    'Description': obj.description,
    'Groups': obj.groups?.map(y => y),
    'MonitorIds': obj.monitorIds?.map(y => y),
    'Name': obj.name,
    'Query': toJson_Query(obj.query),
    'Tags': obj.tags?.map(y => y),
    'Thresholds': obj.thresholds?.map(y => toJson_Threshold(y)),
    'Type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema Creator
 */
export interface Creator {
  /**
   * Name of the creator of the slo
   *
   * @schema Creator#Name
   */
  readonly name?: string;

  /**
   * Handle of the creator of the slo
   *
   * @schema Creator#Handle
   */
  readonly handle?: string;

  /**
   * Email of the creator of the slo
   *
   * @schema Creator#Email
   */
  readonly email?: string;

}

/**
 * Converts an object of type 'Creator' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_Creator(obj: Creator | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Name': obj.name,
    'Handle': obj.handle,
    'Email': obj.email,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema Query
 */
export interface Query {
  /**
   * A Datadog metric query for total (valid) events.
   *
   * @schema Query#Numerator
   */
  readonly numerator?: string;

  /**
   * A Datadog metric query for good events.
   *
   * @schema Query#Denominator
   */
  readonly denominator?: string;

}

/**
 * Converts an object of type 'Query' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_Query(obj: Query | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Numerator': obj.numerator,
    'Denominator': obj.denominator,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema Threshold
 */
export interface Threshold {
  /**
   * The target value for the service level indicator within the corresponding timeframe.
   *
   * @schema Threshold#Target
   */
  readonly target?: number;

  /**
   * A string representation of the target that indicates its precision.(e.g. 98.00)
   *
   * @schema Threshold#TargetDisplay
   */
  readonly targetDisplay?: string;

  /**
   * The SLO time window options. Allowed enum values: 7d,30d,90d
   *
   * @schema Threshold#Timeframe
   */
  readonly timeframe?: ThresholdTimeframe;

  /**
   * The warning value for the service level objective.
   *
   * @schema Threshold#Warning
   */
  readonly warning?: number;

  /**
   * A string representation of the warning target.(e.g. 98.00)
   *
   * @schema Threshold#WarningDisplay
   */
  readonly warningDisplay?: string;

}

/**
 * Converts an object of type 'Threshold' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_Threshold(obj: Threshold | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Target': obj.target,
    'TargetDisplay': obj.targetDisplay,
    'Timeframe': obj.timeframe,
    'Warning': obj.warning,
    'WarningDisplay': obj.warningDisplay,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The type of the slo
 *
 * @schema CfnSloPropsType
 */
export enum CfnSloPropsType {
  /** monitor */
  MONITOR = 'monitor',
  /** metric */
  METRIC = 'metric',
}

/**
 * The SLO time window options. Allowed enum values: 7d,30d,90d
 *
 * @schema ThresholdTimeframe
 */
export enum ThresholdTimeframe {
  /** 7d */
  VALUE_7D = '7d',
  /** 30d */
  VALUE_30D = '30d',
  /** 90d */
  VALUE_90D = '90d',
}


/**
 * A CloudFormation \`Datadog::SLOs::SLO\`
 *
 * @cloudformationResource Datadog::SLOs::SLO
 * @stability external
 */
export class CfnSlo extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = \\"Datadog::SLOs::SLO\\";

  /**
   * Resource props.
   */
  public readonly props: CfnSloProps;

  /**
   * Attribute \`Datadog::SLOs::SLO.Modified\`
   */
  public readonly attrModified: string;
  /**
   * Attribute \`Datadog::SLOs::SLO.Id\`
   */
  public readonly attrId: string;
  /**
   * Attribute \`Datadog::SLOs::SLO.Deleted\`
   */
  public readonly attrDeleted: string;
  /**
   * Attribute \`Datadog::SLOs::SLO.Created\`
   */
  public readonly attrCreated: string;

  /**
   * Create a new \`Datadog::SLOs::SLO\`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: cdk.Construct, id: string, props: CfnSloProps) {
    super(scope, id, { type: CfnSlo.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnSloProps(props)! });

    this.props = props;

    this.attrModified = cdk.Token.asString(this.getAtt('Modified'));
    this.attrId = cdk.Token.asString(this.getAtt('Id'));
    this.attrDeleted = cdk.Token.asString(this.getAtt('Deleted'));
    this.attrCreated = cdk.Token.asString(this.getAtt('Created'));
  }
}"
`;

exports[`generate eks.json 1`] = `
"// Generated by cdk-import
import * as cdk from '@aws-cdk/core';

/**
 * A resource that creates Amazon Elastic Kubernetes Service (Amazon EKS) clusters.
 *
 * @schema CfnClusterProps
 */
export interface CfnClusterProps {
  /**
   * A unique name for your cluster.
   *
   * @schema CfnClusterProps#Name
   */
  readonly name?: string;

  /**
   * Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role. This provides permissions for Amazon EKS to call other AWS APIs.
   *
   * @schema CfnClusterProps#RoleArn
   */
  readonly roleArn: string;

  /**
   * Name of the AWS Identity and Access Management (IAM) role used for clusters that have the public endpoint disabled. this provides permissions for Lambda to be invoked and attach to the cluster VPC
   *
   * @schema CfnClusterProps#LambdaRoleName
   */
  readonly lambdaRoleName?: string;

  /**
   * Desired Kubernetes version for your cluster. If you don't specify this value, the cluster uses the latest version from Amazon EKS.
   *
   * @schema CfnClusterProps#Version
   */
  readonly version?: string;

  /**
   * Network configuration for Amazon EKS cluster.
   *
   *
   *
   * @schema CfnClusterProps#KubernetesNetworkConfig
   */
  readonly kubernetesNetworkConfig?: CfnClusterPropsKubernetesNetworkConfig;

  /**
   * An object that represents the virtual private cloud (VPC) configuration to use for an Amazon EKS cluster.
   *
   * @schema CfnClusterProps#ResourcesVpcConfig
   */
  readonly resourcesVpcConfig: CfnClusterPropsResourcesVpcConfig;

  /**
   * Enables exporting of logs from the Kubernetes control plane to Amazon CloudWatch Logs. By default, logs from the cluster control plane are not exported to CloudWatch Logs. The valid log types are api, audit, authenticator, controllerManager, and scheduler.
   *
   * @schema CfnClusterProps#EnabledClusterLoggingTypes
   */
  readonly enabledClusterLoggingTypes?: string[];

  /**
   * Encryption configuration for the cluster.
   *
   * @schema CfnClusterProps#EncryptionConfig
   */
  readonly encryptionConfig?: EncryptionConfigEntry[];

  /**
   * @schema CfnClusterProps#KubernetesApiAccess
   */
  readonly kubernetesApiAccess?: CfnClusterPropsKubernetesApiAccess;

  /**
   * @schema CfnClusterProps#Tags
   */
  readonly tags?: CfnClusterPropsTags[];

}

/**
 * Converts an object of type 'CfnClusterProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnClusterProps(obj: CfnClusterProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Name': obj.name,
    'RoleArn': obj.roleArn,
    'LambdaRoleName': obj.lambdaRoleName,
    'Version': obj.version,
    'KubernetesNetworkConfig': toJson_CfnClusterPropsKubernetesNetworkConfig(obj.kubernetesNetworkConfig),
    'ResourcesVpcConfig': toJson_CfnClusterPropsResourcesVpcConfig(obj.resourcesVpcConfig),
    'EnabledClusterLoggingTypes': obj.enabledClusterLoggingTypes?.map(y => y),
    'EncryptionConfig': obj.encryptionConfig?.map(y => toJson_EncryptionConfigEntry(y)),
    'KubernetesApiAccess': toJson_CfnClusterPropsKubernetesApiAccess(obj.kubernetesApiAccess),
    'Tags': obj.tags?.map(y => toJson_CfnClusterPropsTags(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Network configuration for Amazon EKS cluster.
 *
 *
 *
 * @schema CfnClusterPropsKubernetesNetworkConfig
 */
export interface CfnClusterPropsKubernetesNetworkConfig {
  /**
   * Specify the range from which cluster services will receive IPv4 addresses.
   *
   * @schema CfnClusterPropsKubernetesNetworkConfig#ServiceIpv4Cidr
   */
  readonly serviceIpv4Cidr?: string;

}

/**
 * Converts an object of type 'CfnClusterPropsKubernetesNetworkConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnClusterPropsKubernetesNetworkConfig(obj: CfnClusterPropsKubernetesNetworkConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'ServiceIpv4Cidr': obj.serviceIpv4Cidr,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * An object that represents the virtual private cloud (VPC) configuration to use for an Amazon EKS cluster.
 *
 * @schema CfnClusterPropsResourcesVpcConfig
 */
export interface CfnClusterPropsResourcesVpcConfig {
  /**
   * Specify one or more security groups for the cross-account elastic network interfaces that Amazon EKS creates to use to allow communication between your worker nodes and the Kubernetes control plane. If you don't specify a security group, the default security group for your VPC is used.
   *
   * @schema CfnClusterPropsResourcesVpcConfig#SecurityGroupIds
   */
  readonly securityGroupIds?: string[];

  /**
   * Specify subnets for your Amazon EKS worker nodes. Amazon EKS creates cross-account elastic network interfaces in these subnets to allow communication between your worker nodes and the Kubernetes control plane.
   *
   * @schema CfnClusterPropsResourcesVpcConfig#SubnetIds
   */
  readonly subnetIds: string[];

  /**
   * Set this value to false to disable public access to your cluster's Kubernetes API server endpoint. If you disable public access, your cluster's Kubernetes API server can only receive requests from within the cluster VPC. The default value for this parameter is true , which enables public access for your Kubernetes API server.
   *
   * @schema CfnClusterPropsResourcesVpcConfig#EndpointPublicAccess
   */
  readonly endpointPublicAccess?: boolean;

  /**
   * Set this value to true to enable private access for your cluster's Kubernetes API server endpoint. If you enable private access, Kubernetes API requests from within your cluster's VPC use the private VPC endpoint. The default value for this parameter is false , which disables private access for your Kubernetes API server. If you disable private access and you have worker nodes or AWS Fargate pods in the cluster, then ensure that publicAccessCidrs includes the necessary CIDR blocks for communication with the worker nodes or Fargate pods.
   *
   * @schema CfnClusterPropsResourcesVpcConfig#EndpointPrivateAccess
   */
  readonly endpointPrivateAccess?: boolean;

  /**
   * The CIDR blocks that are allowed access to your cluster's public Kubernetes API server endpoint. Communication to the endpoint from addresses outside of the CIDR blocks that you specify is denied. The default value is 0.0.0.0/0 . If you've disabled private endpoint access and you have worker nodes or AWS Fargate pods in the cluster, then ensure that you specify the necessary CIDR blocks.
   *
   * @schema CfnClusterPropsResourcesVpcConfig#PublicAccessCidrs
   */
  readonly publicAccessCidrs?: string[];

}

/**
 * Converts an object of type 'CfnClusterPropsResourcesVpcConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnClusterPropsResourcesVpcConfig(obj: CfnClusterPropsResourcesVpcConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'SecurityGroupIds': obj.securityGroupIds?.map(y => y),
    'SubnetIds': obj.subnetIds?.map(y => y),
    'EndpointPublicAccess': obj.endpointPublicAccess,
    'EndpointPrivateAccess': obj.endpointPrivateAccess,
    'PublicAccessCidrs': obj.publicAccessCidrs?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The encryption configuration for the cluster.
 *
 * @schema EncryptionConfigEntry
 */
export interface EncryptionConfigEntry {
  /**
   * Specifies the resources to be encrypted. The only supported value is \\"secrets\\".
   *
   * @schema EncryptionConfigEntry#Resources
   */
  readonly resources?: string[];

  /**
   * @schema EncryptionConfigEntry#Provider
   */
  readonly provider?: Provider;

}

/**
 * Converts an object of type 'EncryptionConfigEntry' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_EncryptionConfigEntry(obj: EncryptionConfigEntry | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Resources': obj.resources?.map(y => y),
    'Provider': toJson_Provider(obj.provider),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnClusterPropsKubernetesApiAccess
 */
export interface CfnClusterPropsKubernetesApiAccess {
  /**
   * @schema CfnClusterPropsKubernetesApiAccess#Roles
   */
  readonly roles?: KubernetesApiAccessEntry[];

  /**
   * @schema CfnClusterPropsKubernetesApiAccess#Users
   */
  readonly users?: KubernetesApiAccessEntry[];

}

/**
 * Converts an object of type 'CfnClusterPropsKubernetesApiAccess' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnClusterPropsKubernetesApiAccess(obj: CfnClusterPropsKubernetesApiAccess | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Roles': obj.roles?.map(y => toJson_KubernetesApiAccessEntry(y)),
    'Users': obj.users?.map(y => toJson_KubernetesApiAccessEntry(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnClusterPropsTags
 */
export interface CfnClusterPropsTags {
  /**
   * @schema CfnClusterPropsTags#Value
   */
  readonly value: string;

  /**
   * @schema CfnClusterPropsTags#Key
   */
  readonly key: string;

}

/**
 * Converts an object of type 'CfnClusterPropsTags' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnClusterPropsTags(obj: CfnClusterPropsTags | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Value': obj.value,
    'Key': obj.key,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * AWS Key Management Service (AWS KMS) customer master key (CMK). Either the ARN or the alias can be used.
 *
 * @schema Provider
 */
export interface Provider {
  /**
   * Amazon Resource Name (ARN) or alias of the customer master key (CMK). The CMK must be symmetric, created in the same region as the cluster, and if the CMK was created in a different account, the user must have access to the CMK.
   *
   * @schema Provider#KeyArn
   */
  readonly keyArn?: string;

}

/**
 * Converts an object of type 'Provider' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_Provider(obj: Provider | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'KeyArn': obj.keyArn,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema KubernetesApiAccessEntry
 */
export interface KubernetesApiAccessEntry {
  /**
   * @schema KubernetesApiAccessEntry#Arn
   */
  readonly arn?: string;

  /**
   * @schema KubernetesApiAccessEntry#Username
   */
  readonly username?: string;

  /**
   * @schema KubernetesApiAccessEntry#Groups
   */
  readonly groups?: string[];

}

/**
 * Converts an object of type 'KubernetesApiAccessEntry' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_KubernetesApiAccessEntry(obj: KubernetesApiAccessEntry | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Arn': obj.arn,
    'Username': obj.username,
    'Groups': obj.groups?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * A CloudFormation \`AWSQS::EKS::Cluster\`
 *
 * @cloudformationResource AWSQS::EKS::Cluster
 * @stability external
 * @link https://github.com/aws-quickstart/quickstart-amazon-eks-cluster-resource-provider.git
 */
export class CfnCluster extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = \\"AWSQS::EKS::Cluster\\";

  /**
   * Resource props.
   */
  public readonly props: CfnClusterProps;

  /**
   * Attribute \`AWSQS::EKS::Cluster.Arn\`
   * @link https://github.com/aws-quickstart/quickstart-amazon-eks-cluster-resource-provider.git
   */
  public readonly attrArn: string;
  /**
   * Attribute \`AWSQS::EKS::Cluster.Endpoint\`
   * @link https://github.com/aws-quickstart/quickstart-amazon-eks-cluster-resource-provider.git
   */
  public readonly attrEndpoint: string;
  /**
   * Attribute \`AWSQS::EKS::Cluster.ClusterSecurityGroupId\`
   * @link https://github.com/aws-quickstart/quickstart-amazon-eks-cluster-resource-provider.git
   */
  public readonly attrClusterSecurityGroupId: string;
  /**
   * Attribute \`AWSQS::EKS::Cluster.CertificateAuthorityData\`
   * @link https://github.com/aws-quickstart/quickstart-amazon-eks-cluster-resource-provider.git
   */
  public readonly attrCertificateAuthorityData: string;
  /**
   * Attribute \`AWSQS::EKS::Cluster.EncryptionConfigKeyArn\`
   * @link https://github.com/aws-quickstart/quickstart-amazon-eks-cluster-resource-provider.git
   */
  public readonly attrEncryptionConfigKeyArn: string;
  /**
   * Attribute \`AWSQS::EKS::Cluster.OIDCIssuerURL\`
   * @link https://github.com/aws-quickstart/quickstart-amazon-eks-cluster-resource-provider.git
   */
  public readonly attrOIDCIssuerURL: string;

  /**
   * Create a new \`AWSQS::EKS::Cluster\`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: cdk.Construct, id: string, props: CfnClusterProps) {
    super(scope, id, { type: CfnCluster.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnClusterProps(props)! });

    this.props = props;

    this.attrArn = cdk.Token.asString(this.getAtt('Arn'));
    this.attrEndpoint = cdk.Token.asString(this.getAtt('Endpoint'));
    this.attrClusterSecurityGroupId = cdk.Token.asString(this.getAtt('ClusterSecurityGroupId'));
    this.attrCertificateAuthorityData = cdk.Token.asString(this.getAtt('CertificateAuthorityData'));
    this.attrEncryptionConfigKeyArn = cdk.Token.asString(this.getAtt('EncryptionConfigKeyArn'));
    this.attrOIDCIssuerURL = cdk.Token.asString(this.getAtt('OIDCIssuerURL'));
  }
}"
`;

exports[`generate jfrog-linux-bastion-module.json 1`] = `
"// Generated by cdk-import
import * as cdk from '@aws-cdk/core';

/**
 * Schema for Module Fragment of type JFrog::Linux::Bastion::MODULE
 *
 * @schema CfnBastionModuleProps
 */
export interface CfnBastionModuleProps {
  /**
   * @schema CfnBastionModuleProps#Parameters
   */
  readonly parameters?: CfnBastionModulePropsParameters;

  /**
   * @schema CfnBastionModuleProps#Resources
   */
  readonly resources?: CfnBastionModulePropsResources;

}

/**
 * Converts an object of type 'CfnBastionModuleProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModuleProps(obj: CfnBastionModuleProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Parameters': toJson_CfnBastionModulePropsParameters(obj.parameters),
    'Resources': toJson_CfnBastionModulePropsResources(obj.resources),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnBastionModulePropsParameters
 */
export interface CfnBastionModulePropsParameters {
  /**
   * Logical Id of the MODULE
   *
   * @schema CfnBastionModulePropsParameters#LogicalId
   */
  readonly logicalId?: CfnBastionModulePropsParametersLogicalId;

  /**
   * The Linux distribution for the AMI to be used for the bastion instances.
   *
   * @schema CfnBastionModulePropsParameters#BastionAMIOS
   */
  readonly bastionAmios?: CfnBastionModulePropsParametersBastionAmios;

  /**
   * The value used for the name tag of the bastion host
   *
   * @schema CfnBastionModulePropsParameters#BastionHostName
   */
  readonly bastionHostName?: CfnBastionModulePropsParametersBastionHostName;

  /**
   * Banner text to display upon login.
   *
   * @schema CfnBastionModulePropsParameters#BastionBanner
   */
  readonly bastionBanner?: CfnBastionModulePropsParametersBastionBanner;

  /**
   * VPC tenancy to launch the bastion in. Options: 'dedicated' or 'default'
   *
   * @schema CfnBastionModulePropsParameters#BastionTenancy
   */
  readonly bastionTenancy?: CfnBastionModulePropsParametersBastionTenancy;

  /**
   * Amazon EC2 instance type for the bastion instances.
   *
   * @schema CfnBastionModulePropsParameters#BastionInstanceType
   */
  readonly bastionInstanceType?: CfnBastionModulePropsParametersBastionInstanceType;

  /**
   * To include a banner to be displayed when connecting via SSH to the bastion, choose true.
   *
   * @schema CfnBastionModulePropsParameters#EnableBanner
   */
  readonly enableBanner?: CfnBastionModulePropsParametersEnableBanner;

  /**
   * To enable TCP forwarding, choose true.
   *
   * @schema CfnBastionModulePropsParameters#EnableTCPForwarding
   */
  readonly enableTcpForwarding?: CfnBastionModulePropsParametersEnableTcpForwarding;

  /**
   * To enable X11 forwarding, choose true.
   *
   * @schema CfnBastionModulePropsParameters#EnableX11Forwarding
   */
  readonly enableX11Forwarding?: CfnBastionModulePropsParametersEnableX11Forwarding;

  /**
   * Name of an existing public/private key pair. If you do not have one in this AWS Region, please create it before continuing.
   *
   * @schema CfnBastionModulePropsParameters#KeyPairName
   */
  readonly keyPairName?: CfnBastionModulePropsParametersKeyPairName;

  /**
   * The number of bastion hosts to create. The maximum number is four.
   *
   * @schema CfnBastionModulePropsParameters#NumBastionHosts
   */
  readonly numBastionHosts?: CfnBastionModulePropsParametersNumBastionHosts;

  /**
   * ID of the public subnet in Availability Zone 1 of your existing VPC (e.g., subnet-z0376dab).
   *
   * @schema CfnBastionModulePropsParameters#PublicSubnet1Id
   */
  readonly publicSubnet1Id?: CfnBastionModulePropsParametersPublicSubnet1Id;

  /**
   * ID of the public subnet in Availability Zone 1 of your existing VPC (e.g., subnet-z0376dab).
   *
   * @schema CfnBastionModulePropsParameters#PublicSubnet2Id
   */
  readonly publicSubnet2Id?: CfnBastionModulePropsParametersPublicSubnet2Id;

  /**
   * S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
   *
   * @schema CfnBastionModulePropsParameters#QSS3BucketName
   */
  readonly qss3BucketName?: CfnBastionModulePropsParametersQss3BucketName;

  /**
   * The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value.
   *
   * @schema CfnBastionModulePropsParameters#QSS3BucketRegion
   */
  readonly qss3BucketRegion?: CfnBastionModulePropsParametersQss3BucketRegion;

  /**
   * S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), dots (.) and forward slash (/) and it should end with a forward slash (/).
   *
   * @schema CfnBastionModulePropsParameters#QSS3KeyPrefix
   */
  readonly qss3KeyPrefix?: CfnBastionModulePropsParametersQss3KeyPrefix;

  /**
   * Allowed CIDR block for external SSH access to the bastions.
   *
   * @schema CfnBastionModulePropsParameters#RemoteAccessCIDR
   */
  readonly remoteAccessCidr?: CfnBastionModulePropsParametersRemoteAccessCidr;

  /**
   * ID of the VPC (e.g., vpc-0343606e).
   *
   * @schema CfnBastionModulePropsParameters#VPCID
   */
  readonly vpcid?: CfnBastionModulePropsParametersVpcid;

  /**
   * An alternative initialization script to run during setup.
   *
   * @schema CfnBastionModulePropsParameters#AlternativeInitializationScript
   */
  readonly alternativeInitializationScript?: CfnBastionModulePropsParametersAlternativeInitializationScript;

  /**
   * The Region-specific image to use for the instance.
   *
   * @schema CfnBastionModulePropsParameters#OSImageOverride
   */
  readonly osImageOverride?: CfnBastionModulePropsParametersOsImageOverride;

  /**
   * A comma-separated list of environment variables for use in bootstrapping. Variables must be in the format KEY=VALUE. VALUE cannot contain commas.
   *
   * @schema CfnBastionModulePropsParameters#EnvironmentVariables
   */
  readonly environmentVariables?: CfnBastionModulePropsParametersEnvironmentVariables;

  /**
   * The size in GB for the root EBS volume.
   *
   * @schema CfnBastionModulePropsParameters#RootVolumeSize
   */
  readonly rootVolumeSize?: CfnBastionModulePropsParametersRootVolumeSize;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParameters' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParameters(obj: CfnBastionModulePropsParameters | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'LogicalId': toJson_CfnBastionModulePropsParametersLogicalId(obj.logicalId),
    'BastionAMIOS': toJson_CfnBastionModulePropsParametersBastionAmios(obj.bastionAmios),
    'BastionHostName': toJson_CfnBastionModulePropsParametersBastionHostName(obj.bastionHostName),
    'BastionBanner': toJson_CfnBastionModulePropsParametersBastionBanner(obj.bastionBanner),
    'BastionTenancy': toJson_CfnBastionModulePropsParametersBastionTenancy(obj.bastionTenancy),
    'BastionInstanceType': toJson_CfnBastionModulePropsParametersBastionInstanceType(obj.bastionInstanceType),
    'EnableBanner': toJson_CfnBastionModulePropsParametersEnableBanner(obj.enableBanner),
    'EnableTCPForwarding': toJson_CfnBastionModulePropsParametersEnableTcpForwarding(obj.enableTcpForwarding),
    'EnableX11Forwarding': toJson_CfnBastionModulePropsParametersEnableX11Forwarding(obj.enableX11Forwarding),
    'KeyPairName': toJson_CfnBastionModulePropsParametersKeyPairName(obj.keyPairName),
    'NumBastionHosts': toJson_CfnBastionModulePropsParametersNumBastionHosts(obj.numBastionHosts),
    'PublicSubnet1Id': toJson_CfnBastionModulePropsParametersPublicSubnet1Id(obj.publicSubnet1Id),
    'PublicSubnet2Id': toJson_CfnBastionModulePropsParametersPublicSubnet2Id(obj.publicSubnet2Id),
    'QSS3BucketName': toJson_CfnBastionModulePropsParametersQss3BucketName(obj.qss3BucketName),
    'QSS3BucketRegion': toJson_CfnBastionModulePropsParametersQss3BucketRegion(obj.qss3BucketRegion),
    'QSS3KeyPrefix': toJson_CfnBastionModulePropsParametersQss3KeyPrefix(obj.qss3KeyPrefix),
    'RemoteAccessCIDR': toJson_CfnBastionModulePropsParametersRemoteAccessCidr(obj.remoteAccessCidr),
    'VPCID': toJson_CfnBastionModulePropsParametersVpcid(obj.vpcid),
    'AlternativeInitializationScript': toJson_CfnBastionModulePropsParametersAlternativeInitializationScript(obj.alternativeInitializationScript),
    'OSImageOverride': toJson_CfnBastionModulePropsParametersOsImageOverride(obj.osImageOverride),
    'EnvironmentVariables': toJson_CfnBastionModulePropsParametersEnvironmentVariables(obj.environmentVariables),
    'RootVolumeSize': toJson_CfnBastionModulePropsParametersRootVolumeSize(obj.rootVolumeSize),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnBastionModulePropsResources
 */
export interface CfnBastionModulePropsResources {
  /**
   * @schema CfnBastionModulePropsResources#BastionMainLogGroup
   */
  readonly bastionMainLogGroup?: CfnBastionModulePropsResourcesBastionMainLogGroup;

  /**
   * @schema CfnBastionModulePropsResources#SSHMetricFilter
   */
  readonly sshMetricFilter?: CfnBastionModulePropsResourcesSshMetricFilter;

  /**
   * @schema CfnBastionModulePropsResources#BastionHostRole
   */
  readonly bastionHostRole?: CfnBastionModulePropsResourcesBastionHostRole;

  /**
   * @schema CfnBastionModulePropsResources#BastionHostPolicy
   */
  readonly bastionHostPolicy?: CfnBastionModulePropsResourcesBastionHostPolicy;

  /**
   * @schema CfnBastionModulePropsResources#BastionHostProfile
   */
  readonly bastionHostProfile?: CfnBastionModulePropsResourcesBastionHostProfile;

  /**
   * @schema CfnBastionModulePropsResources#EIP1
   */
  readonly eip1?: CfnBastionModulePropsResourcesEip1;

  /**
   * @schema CfnBastionModulePropsResources#EIP2
   */
  readonly eip2?: CfnBastionModulePropsResourcesEip2;

  /**
   * @schema CfnBastionModulePropsResources#EIP3
   */
  readonly eip3?: CfnBastionModulePropsResourcesEip3;

  /**
   * @schema CfnBastionModulePropsResources#EIP4
   */
  readonly eip4?: CfnBastionModulePropsResourcesEip4;

  /**
   * @schema CfnBastionModulePropsResources#BastionAutoScalingGroup
   */
  readonly bastionAutoScalingGroup?: CfnBastionModulePropsResourcesBastionAutoScalingGroup;

  /**
   * @schema CfnBastionModulePropsResources#BastionLaunchConfiguration
   */
  readonly bastionLaunchConfiguration?: CfnBastionModulePropsResourcesBastionLaunchConfiguration;

  /**
   * @schema CfnBastionModulePropsResources#BastionSecurityGroup
   */
  readonly bastionSecurityGroup?: CfnBastionModulePropsResourcesBastionSecurityGroup;

}

/**
 * Converts an object of type 'CfnBastionModulePropsResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsResources(obj: CfnBastionModulePropsResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'BastionMainLogGroup': toJson_CfnBastionModulePropsResourcesBastionMainLogGroup(obj.bastionMainLogGroup),
    'SSHMetricFilter': toJson_CfnBastionModulePropsResourcesSshMetricFilter(obj.sshMetricFilter),
    'BastionHostRole': toJson_CfnBastionModulePropsResourcesBastionHostRole(obj.bastionHostRole),
    'BastionHostPolicy': toJson_CfnBastionModulePropsResourcesBastionHostPolicy(obj.bastionHostPolicy),
    'BastionHostProfile': toJson_CfnBastionModulePropsResourcesBastionHostProfile(obj.bastionHostProfile),
    'EIP1': toJson_CfnBastionModulePropsResourcesEip1(obj.eip1),
    'EIP2': toJson_CfnBastionModulePropsResourcesEip2(obj.eip2),
    'EIP3': toJson_CfnBastionModulePropsResourcesEip3(obj.eip3),
    'EIP4': toJson_CfnBastionModulePropsResourcesEip4(obj.eip4),
    'BastionAutoScalingGroup': toJson_CfnBastionModulePropsResourcesBastionAutoScalingGroup(obj.bastionAutoScalingGroup),
    'BastionLaunchConfiguration': toJson_CfnBastionModulePropsResourcesBastionLaunchConfiguration(obj.bastionLaunchConfiguration),
    'BastionSecurityGroup': toJson_CfnBastionModulePropsResourcesBastionSecurityGroup(obj.bastionSecurityGroup),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Logical Id of the MODULE
 *
 * @schema CfnBastionModulePropsParametersLogicalId
 */
export interface CfnBastionModulePropsParametersLogicalId {
  /**
   * @schema CfnBastionModulePropsParametersLogicalId#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersLogicalId#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersLogicalId' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersLogicalId(obj: CfnBastionModulePropsParametersLogicalId | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The Linux distribution for the AMI to be used for the bastion instances.
 *
 * @schema CfnBastionModulePropsParametersBastionAmios
 */
export interface CfnBastionModulePropsParametersBastionAmios {
  /**
   * @schema CfnBastionModulePropsParametersBastionAmios#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersBastionAmios#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersBastionAmios' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersBastionAmios(obj: CfnBastionModulePropsParametersBastionAmios | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The value used for the name tag of the bastion host
 *
 * @schema CfnBastionModulePropsParametersBastionHostName
 */
export interface CfnBastionModulePropsParametersBastionHostName {
  /**
   * @schema CfnBastionModulePropsParametersBastionHostName#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersBastionHostName#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersBastionHostName' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersBastionHostName(obj: CfnBastionModulePropsParametersBastionHostName | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Banner text to display upon login.
 *
 * @schema CfnBastionModulePropsParametersBastionBanner
 */
export interface CfnBastionModulePropsParametersBastionBanner {
  /**
   * @schema CfnBastionModulePropsParametersBastionBanner#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersBastionBanner#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersBastionBanner' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersBastionBanner(obj: CfnBastionModulePropsParametersBastionBanner | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * VPC tenancy to launch the bastion in. Options: 'dedicated' or 'default'
 *
 * @schema CfnBastionModulePropsParametersBastionTenancy
 */
export interface CfnBastionModulePropsParametersBastionTenancy {
  /**
   * @schema CfnBastionModulePropsParametersBastionTenancy#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersBastionTenancy#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersBastionTenancy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersBastionTenancy(obj: CfnBastionModulePropsParametersBastionTenancy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Amazon EC2 instance type for the bastion instances.
 *
 * @schema CfnBastionModulePropsParametersBastionInstanceType
 */
export interface CfnBastionModulePropsParametersBastionInstanceType {
  /**
   * @schema CfnBastionModulePropsParametersBastionInstanceType#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersBastionInstanceType#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersBastionInstanceType' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersBastionInstanceType(obj: CfnBastionModulePropsParametersBastionInstanceType | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * To include a banner to be displayed when connecting via SSH to the bastion, choose true.
 *
 * @schema CfnBastionModulePropsParametersEnableBanner
 */
export interface CfnBastionModulePropsParametersEnableBanner {
  /**
   * @schema CfnBastionModulePropsParametersEnableBanner#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersEnableBanner#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersEnableBanner' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersEnableBanner(obj: CfnBastionModulePropsParametersEnableBanner | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * To enable TCP forwarding, choose true.
 *
 * @schema CfnBastionModulePropsParametersEnableTcpForwarding
 */
export interface CfnBastionModulePropsParametersEnableTcpForwarding {
  /**
   * @schema CfnBastionModulePropsParametersEnableTcpForwarding#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersEnableTcpForwarding#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersEnableTcpForwarding' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersEnableTcpForwarding(obj: CfnBastionModulePropsParametersEnableTcpForwarding | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * To enable X11 forwarding, choose true.
 *
 * @schema CfnBastionModulePropsParametersEnableX11Forwarding
 */
export interface CfnBastionModulePropsParametersEnableX11Forwarding {
  /**
   * @schema CfnBastionModulePropsParametersEnableX11Forwarding#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersEnableX11Forwarding#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersEnableX11Forwarding' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersEnableX11Forwarding(obj: CfnBastionModulePropsParametersEnableX11Forwarding | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Name of an existing public/private key pair. If you do not have one in this AWS Region, please create it before continuing.
 *
 * @schema CfnBastionModulePropsParametersKeyPairName
 */
export interface CfnBastionModulePropsParametersKeyPairName {
  /**
   * @schema CfnBastionModulePropsParametersKeyPairName#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersKeyPairName#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersKeyPairName' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersKeyPairName(obj: CfnBastionModulePropsParametersKeyPairName | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The number of bastion hosts to create. The maximum number is four.
 *
 * @schema CfnBastionModulePropsParametersNumBastionHosts
 */
export interface CfnBastionModulePropsParametersNumBastionHosts {
  /**
   * @schema CfnBastionModulePropsParametersNumBastionHosts#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersNumBastionHosts#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersNumBastionHosts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersNumBastionHosts(obj: CfnBastionModulePropsParametersNumBastionHosts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * ID of the public subnet in Availability Zone 1 of your existing VPC (e.g., subnet-z0376dab).
 *
 * @schema CfnBastionModulePropsParametersPublicSubnet1Id
 */
export interface CfnBastionModulePropsParametersPublicSubnet1Id {
  /**
   * @schema CfnBastionModulePropsParametersPublicSubnet1Id#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersPublicSubnet1Id#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersPublicSubnet1Id' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersPublicSubnet1Id(obj: CfnBastionModulePropsParametersPublicSubnet1Id | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * ID of the public subnet in Availability Zone 1 of your existing VPC (e.g., subnet-z0376dab).
 *
 * @schema CfnBastionModulePropsParametersPublicSubnet2Id
 */
export interface CfnBastionModulePropsParametersPublicSubnet2Id {
  /**
   * @schema CfnBastionModulePropsParametersPublicSubnet2Id#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersPublicSubnet2Id#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersPublicSubnet2Id' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersPublicSubnet2Id(obj: CfnBastionModulePropsParametersPublicSubnet2Id | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
 *
 * @schema CfnBastionModulePropsParametersQss3BucketName
 */
export interface CfnBastionModulePropsParametersQss3BucketName {
  /**
   * @schema CfnBastionModulePropsParametersQss3BucketName#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersQss3BucketName#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersQss3BucketName' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersQss3BucketName(obj: CfnBastionModulePropsParametersQss3BucketName | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value.
 *
 * @schema CfnBastionModulePropsParametersQss3BucketRegion
 */
export interface CfnBastionModulePropsParametersQss3BucketRegion {
  /**
   * @schema CfnBastionModulePropsParametersQss3BucketRegion#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersQss3BucketRegion#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersQss3BucketRegion' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersQss3BucketRegion(obj: CfnBastionModulePropsParametersQss3BucketRegion | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), dots (.) and forward slash (/) and it should end with a forward slash (/).
 *
 * @schema CfnBastionModulePropsParametersQss3KeyPrefix
 */
export interface CfnBastionModulePropsParametersQss3KeyPrefix {
  /**
   * @schema CfnBastionModulePropsParametersQss3KeyPrefix#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersQss3KeyPrefix#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersQss3KeyPrefix' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersQss3KeyPrefix(obj: CfnBastionModulePropsParametersQss3KeyPrefix | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Allowed CIDR block for external SSH access to the bastions.
 *
 * @schema CfnBastionModulePropsParametersRemoteAccessCidr
 */
export interface CfnBastionModulePropsParametersRemoteAccessCidr {
  /**
   * @schema CfnBastionModulePropsParametersRemoteAccessCidr#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersRemoteAccessCidr#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersRemoteAccessCidr' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersRemoteAccessCidr(obj: CfnBastionModulePropsParametersRemoteAccessCidr | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * ID of the VPC (e.g., vpc-0343606e).
 *
 * @schema CfnBastionModulePropsParametersVpcid
 */
export interface CfnBastionModulePropsParametersVpcid {
  /**
   * @schema CfnBastionModulePropsParametersVpcid#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersVpcid#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersVpcid' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersVpcid(obj: CfnBastionModulePropsParametersVpcid | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * An alternative initialization script to run during setup.
 *
 * @schema CfnBastionModulePropsParametersAlternativeInitializationScript
 */
export interface CfnBastionModulePropsParametersAlternativeInitializationScript {
  /**
   * @schema CfnBastionModulePropsParametersAlternativeInitializationScript#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersAlternativeInitializationScript#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersAlternativeInitializationScript' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersAlternativeInitializationScript(obj: CfnBastionModulePropsParametersAlternativeInitializationScript | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The Region-specific image to use for the instance.
 *
 * @schema CfnBastionModulePropsParametersOsImageOverride
 */
export interface CfnBastionModulePropsParametersOsImageOverride {
  /**
   * @schema CfnBastionModulePropsParametersOsImageOverride#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersOsImageOverride#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersOsImageOverride' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersOsImageOverride(obj: CfnBastionModulePropsParametersOsImageOverride | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A comma-separated list of environment variables for use in bootstrapping. Variables must be in the format KEY=VALUE. VALUE cannot contain commas.
 *
 * @schema CfnBastionModulePropsParametersEnvironmentVariables
 */
export interface CfnBastionModulePropsParametersEnvironmentVariables {
  /**
   * @schema CfnBastionModulePropsParametersEnvironmentVariables#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersEnvironmentVariables#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersEnvironmentVariables' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersEnvironmentVariables(obj: CfnBastionModulePropsParametersEnvironmentVariables | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The size in GB for the root EBS volume.
 *
 * @schema CfnBastionModulePropsParametersRootVolumeSize
 */
export interface CfnBastionModulePropsParametersRootVolumeSize {
  /**
   * @schema CfnBastionModulePropsParametersRootVolumeSize#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersRootVolumeSize#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersRootVolumeSize' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersRootVolumeSize(obj: CfnBastionModulePropsParametersRootVolumeSize | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnBastionModulePropsResourcesBastionMainLogGroup
 */
export interface CfnBastionModulePropsResourcesBastionMainLogGroup {
  /**
   * @schema CfnBastionModulePropsResourcesBastionMainLogGroup#Type
   */
  readonly type?: string;

  /**
   * @schema CfnBastionModulePropsResourcesBastionMainLogGroup#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnBastionModulePropsResourcesBastionMainLogGroup' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsResourcesBastionMainLogGroup(obj: CfnBastionModulePropsResourcesBastionMainLogGroup | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnBastionModulePropsResourcesSshMetricFilter
 */
export interface CfnBastionModulePropsResourcesSshMetricFilter {
  /**
   * @schema CfnBastionModulePropsResourcesSshMetricFilter#Type
   */
  readonly type?: string;

  /**
   * @schema CfnBastionModulePropsResourcesSshMetricFilter#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnBastionModulePropsResourcesSshMetricFilter' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsResourcesSshMetricFilter(obj: CfnBastionModulePropsResourcesSshMetricFilter | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnBastionModulePropsResourcesBastionHostRole
 */
export interface CfnBastionModulePropsResourcesBastionHostRole {
  /**
   * @schema CfnBastionModulePropsResourcesBastionHostRole#Type
   */
  readonly type?: string;

  /**
   * @schema CfnBastionModulePropsResourcesBastionHostRole#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnBastionModulePropsResourcesBastionHostRole' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsResourcesBastionHostRole(obj: CfnBastionModulePropsResourcesBastionHostRole | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnBastionModulePropsResourcesBastionHostPolicy
 */
export interface CfnBastionModulePropsResourcesBastionHostPolicy {
  /**
   * @schema CfnBastionModulePropsResourcesBastionHostPolicy#Type
   */
  readonly type?: string;

  /**
   * @schema CfnBastionModulePropsResourcesBastionHostPolicy#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnBastionModulePropsResourcesBastionHostPolicy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsResourcesBastionHostPolicy(obj: CfnBastionModulePropsResourcesBastionHostPolicy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnBastionModulePropsResourcesBastionHostProfile
 */
export interface CfnBastionModulePropsResourcesBastionHostProfile {
  /**
   * @schema CfnBastionModulePropsResourcesBastionHostProfile#Type
   */
  readonly type?: string;

  /**
   * @schema CfnBastionModulePropsResourcesBastionHostProfile#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnBastionModulePropsResourcesBastionHostProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsResourcesBastionHostProfile(obj: CfnBastionModulePropsResourcesBastionHostProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnBastionModulePropsResourcesEip1
 */
export interface CfnBastionModulePropsResourcesEip1 {
  /**
   * @schema CfnBastionModulePropsResourcesEip1#Type
   */
  readonly type?: string;

  /**
   * @schema CfnBastionModulePropsResourcesEip1#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnBastionModulePropsResourcesEip1' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsResourcesEip1(obj: CfnBastionModulePropsResourcesEip1 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnBastionModulePropsResourcesEip2
 */
export interface CfnBastionModulePropsResourcesEip2 {
  /**
   * @schema CfnBastionModulePropsResourcesEip2#Type
   */
  readonly type?: string;

  /**
   * @schema CfnBastionModulePropsResourcesEip2#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnBastionModulePropsResourcesEip2' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsResourcesEip2(obj: CfnBastionModulePropsResourcesEip2 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnBastionModulePropsResourcesEip3
 */
export interface CfnBastionModulePropsResourcesEip3 {
  /**
   * @schema CfnBastionModulePropsResourcesEip3#Type
   */
  readonly type?: string;

  /**
   * @schema CfnBastionModulePropsResourcesEip3#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnBastionModulePropsResourcesEip3' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsResourcesEip3(obj: CfnBastionModulePropsResourcesEip3 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnBastionModulePropsResourcesEip4
 */
export interface CfnBastionModulePropsResourcesEip4 {
  /**
   * @schema CfnBastionModulePropsResourcesEip4#Type
   */
  readonly type?: string;

  /**
   * @schema CfnBastionModulePropsResourcesEip4#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnBastionModulePropsResourcesEip4' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsResourcesEip4(obj: CfnBastionModulePropsResourcesEip4 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnBastionModulePropsResourcesBastionAutoScalingGroup
 */
export interface CfnBastionModulePropsResourcesBastionAutoScalingGroup {
  /**
   * @schema CfnBastionModulePropsResourcesBastionAutoScalingGroup#Type
   */
  readonly type?: string;

  /**
   * @schema CfnBastionModulePropsResourcesBastionAutoScalingGroup#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnBastionModulePropsResourcesBastionAutoScalingGroup' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsResourcesBastionAutoScalingGroup(obj: CfnBastionModulePropsResourcesBastionAutoScalingGroup | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnBastionModulePropsResourcesBastionLaunchConfiguration
 */
export interface CfnBastionModulePropsResourcesBastionLaunchConfiguration {
  /**
   * @schema CfnBastionModulePropsResourcesBastionLaunchConfiguration#Type
   */
  readonly type?: string;

  /**
   * @schema CfnBastionModulePropsResourcesBastionLaunchConfiguration#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnBastionModulePropsResourcesBastionLaunchConfiguration' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsResourcesBastionLaunchConfiguration(obj: CfnBastionModulePropsResourcesBastionLaunchConfiguration | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnBastionModulePropsResourcesBastionSecurityGroup
 */
export interface CfnBastionModulePropsResourcesBastionSecurityGroup {
  /**
   * @schema CfnBastionModulePropsResourcesBastionSecurityGroup#Type
   */
  readonly type?: string;

  /**
   * @schema CfnBastionModulePropsResourcesBastionSecurityGroup#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnBastionModulePropsResourcesBastionSecurityGroup' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsResourcesBastionSecurityGroup(obj: CfnBastionModulePropsResourcesBastionSecurityGroup | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * A CloudFormation \`JFrog::Linux::Bastion::MODULE\`
 *
 * @cloudformationResource JFrog::Linux::Bastion::MODULE
 * @stability external
 */
export class CfnBastionModule extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = \\"JFrog::Linux::Bastion::MODULE\\";

  /**
   * Resource props.
   */
  public readonly props: CfnBastionModuleProps;


  /**
   * Create a new \`JFrog::Linux::Bastion::MODULE\`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: cdk.Construct, id: string, props: CfnBastionModuleProps) {
    super(scope, id, { type: CfnBastionModule.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnBastionModuleProps(props)! });

    this.props = props;

  }
}"
`;
