// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generate datadog.json 1`] = `
"// Generated by cdk-import
import * as cdk from '@aws-cdk/core';

/**
 * Datadog SLO 1.0.0
 *
 * @schema CfnSloProps
 */
export interface CfnSloProps {
  /**
   * @schema CfnSloProps#Creator
   */
  readonly creator?: Creator;

  /**
   * Description of the slo
   *
   * @schema CfnSloProps#Description
   */
  readonly description?: string;

  /**
   * A list of (up to 20) monitor groups that narrow the scope of a monitor service level objective.
   *
   * @schema CfnSloProps#Groups
   */
  readonly groups?: string[];

  /**
   * A list of monitor ids that defines the scope of a monitor service level objective. Required if type is monitor.
   *
   * @schema CfnSloProps#MonitorIds
   */
  readonly monitorIds?: number[];

  /**
   * Name of the slo
   *
   * @schema CfnSloProps#Name
   */
  readonly name: string;

  /**
   * @schema CfnSloProps#Query
   */
  readonly query?: Query;

  /**
   * Tags associated with the slo
   *
   * @schema CfnSloProps#Tags
   */
  readonly tags?: string[];

  /**
   * @schema CfnSloProps#Thresholds
   */
  readonly thresholds: Threshold[];

  /**
   * The type of the slo
   *
   * @schema CfnSloProps#Type
   */
  readonly type: CfnSloPropsType;

}

/**
 * Converts an object of type 'CfnSloProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnSloProps(obj: CfnSloProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Creator': toJson_Creator(obj.creator),
    'Description': obj.description,
    'Groups': obj.groups?.map(y => y),
    'MonitorIds': obj.monitorIds?.map(y => y),
    'Name': obj.name,
    'Query': toJson_Query(obj.query),
    'Tags': obj.tags?.map(y => y),
    'Thresholds': obj.thresholds?.map(y => toJson_Threshold(y)),
    'Type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema Creator
 */
export interface Creator {
  /**
   * Name of the creator of the slo
   *
   * @schema Creator#Name
   */
  readonly name?: string;

  /**
   * Handle of the creator of the slo
   *
   * @schema Creator#Handle
   */
  readonly handle?: string;

  /**
   * Email of the creator of the slo
   *
   * @schema Creator#Email
   */
  readonly email?: string;

}

/**
 * Converts an object of type 'Creator' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_Creator(obj: Creator | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Name': obj.name,
    'Handle': obj.handle,
    'Email': obj.email,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema Query
 */
export interface Query {
  /**
   * A Datadog metric query for total (valid) events.
   *
   * @schema Query#Numerator
   */
  readonly numerator?: string;

  /**
   * A Datadog metric query for good events.
   *
   * @schema Query#Denominator
   */
  readonly denominator?: string;

}

/**
 * Converts an object of type 'Query' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_Query(obj: Query | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Numerator': obj.numerator,
    'Denominator': obj.denominator,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema Threshold
 */
export interface Threshold {
  /**
   * The target value for the service level indicator within the corresponding timeframe.
   *
   * @schema Threshold#Target
   */
  readonly target?: number;

  /**
   * A string representation of the target that indicates its precision.(e.g. 98.00)
   *
   * @schema Threshold#TargetDisplay
   */
  readonly targetDisplay?: string;

  /**
   * The SLO time window options. Allowed enum values: 7d,30d,90d
   *
   * @schema Threshold#Timeframe
   */
  readonly timeframe?: ThresholdTimeframe;

  /**
   * The warning value for the service level objective.
   *
   * @schema Threshold#Warning
   */
  readonly warning?: number;

  /**
   * A string representation of the warning target.(e.g. 98.00)
   *
   * @schema Threshold#WarningDisplay
   */
  readonly warningDisplay?: string;

}

/**
 * Converts an object of type 'Threshold' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_Threshold(obj: Threshold | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Target': obj.target,
    'TargetDisplay': obj.targetDisplay,
    'Timeframe': obj.timeframe,
    'Warning': obj.warning,
    'WarningDisplay': obj.warningDisplay,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The type of the slo
 *
 * @schema CfnSloPropsType
 */
export enum CfnSloPropsType {
  /** monitor */
  MONITOR = 'monitor',
  /** metric */
  METRIC = 'metric',
}

/**
 * The SLO time window options. Allowed enum values: 7d,30d,90d
 *
 * @schema ThresholdTimeframe
 */
export enum ThresholdTimeframe {
  /** 7d */
  VALUE_7D = '7d',
  /** 30d */
  VALUE_30D = '30d',
  /** 90d */
  VALUE_90D = '90d',
}


/**
 * A CloudFormation \`Datadog::SLOs::SLO\`
 *
 * @cloudformationResource Datadog::SLOs::SLO
 * @stability external
 */
export class CfnSlo extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = \\"Datadog::SLOs::SLO\\";

  /**
   * \`Datadog::SLOs::SLO.Description\`
   * Description of the slo
   */
  public readonly description: string | undefined;
  /**
   * \`Datadog::SLOs::SLO.Groups\`
   * A list of (up to 20) monitor groups that narrow the scope of a monitor service level objective.
   */
  public readonly groups: string[] | undefined;
  /**
   * \`Datadog::SLOs::SLO.MonitorIds\`
   * A list of monitor ids that defines the scope of a monitor service level objective. Required if type is monitor.
   */
  public readonly monitorIds: number[] | undefined;
  /**
   * \`Datadog::SLOs::SLO.Name\`
   * Name of the slo
   */
  public readonly name: string;
  /**
   * \`Datadog::SLOs::SLO.Query\`
   */
  public readonly query: Query | undefined;
  /**
   * \`Datadog::SLOs::SLO.Tags\`
   * Tags associated with the slo
   */
  public readonly tags: string[] | undefined;
  /**
   * \`Datadog::SLOs::SLO.Thresholds\`
   */
  public readonly thresholds: Threshold[];
  /**
   * \`Datadog::SLOs::SLO.Type\`
   * The type of the slo
   */
  public readonly type: string;
  /**
   * Attribute \`Datadog::SLOs::SLO.Modified\`
   */
  public readonly attrModified: string;
  /**
   * Attribute \`Datadog::SLOs::SLO.Id\`
   */
  public readonly attrId: string;
  /**
   * Attribute \`Datadog::SLOs::SLO.Deleted\`
   */
  public readonly attrDeleted: string;
  /**
   * Attribute \`Datadog::SLOs::SLO.Created\`
   */
  public readonly attrCreated: string;

  /**
   * Create a new \`Datadog::SLOs::SLO\`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: cdk.Construct, id: string, props: CfnSloProps) {
    super(scope, id, { type: CfnSlo.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnSloProps(props)! });

    this.description = props.description;
    this.groups = props.groups;
    this.monitorIds = props.monitorIds;
    this.name = props.name;
    this.query = props.query;
    this.tags = props.tags;
    this.thresholds = props.thresholds;
    this.type = props.type;
    this.attrModified = cdk.Token.asString(this.getAtt('Modified'));
    this.attrId = cdk.Token.asString(this.getAtt('Id'));
    this.attrDeleted = cdk.Token.asString(this.getAtt('Deleted'));
    this.attrCreated = cdk.Token.asString(this.getAtt('Created'));
  }
}"
`;

exports[`generate eks.json 1`] = `
"// Generated by cdk-import
import * as cdk from '@aws-cdk/core';

/**
 * A resource that creates Amazon Elastic Kubernetes Service (Amazon EKS) clusters.
 *
 * @schema CfnClusterProps
 */
export interface CfnClusterProps {
  /**
   * A unique name for your cluster.
   *
   * @schema CfnClusterProps#Name
   */
  readonly name?: string;

  /**
   * Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role. This provides permissions for Amazon EKS to call other AWS APIs.
   *
   * @schema CfnClusterProps#RoleArn
   */
  readonly roleArn: string;

  /**
   * Name of the AWS Identity and Access Management (IAM) role used for clusters that have the public endpoint disabled. this provides permissions for Lambda to be invoked and attach to the cluster VPC
   *
   * @schema CfnClusterProps#LambdaRoleName
   */
  readonly lambdaRoleName?: string;

  /**
   * Desired Kubernetes version for your cluster. If you don't specify this value, the cluster uses the latest version from Amazon EKS.
   *
   * @schema CfnClusterProps#Version
   */
  readonly version?: string;

  /**
   * Network configuration for Amazon EKS cluster.
   *
   *
   *
   * @schema CfnClusterProps#KubernetesNetworkConfig
   */
  readonly kubernetesNetworkConfig?: CfnClusterPropsKubernetesNetworkConfig;

  /**
   * An object that represents the virtual private cloud (VPC) configuration to use for an Amazon EKS cluster.
   *
   * @schema CfnClusterProps#ResourcesVpcConfig
   */
  readonly resourcesVpcConfig: CfnClusterPropsResourcesVpcConfig;

  /**
   * Enables exporting of logs from the Kubernetes control plane to Amazon CloudWatch Logs. By default, logs from the cluster control plane are not exported to CloudWatch Logs. The valid log types are api, audit, authenticator, controllerManager, and scheduler.
   *
   * @schema CfnClusterProps#EnabledClusterLoggingTypes
   */
  readonly enabledClusterLoggingTypes?: string[];

  /**
   * Encryption configuration for the cluster.
   *
   * @schema CfnClusterProps#EncryptionConfig
   */
  readonly encryptionConfig?: EncryptionConfigEntry[];

  /**
   * @schema CfnClusterProps#KubernetesApiAccess
   */
  readonly kubernetesApiAccess?: CfnClusterPropsKubernetesApiAccess;

  /**
   * @schema CfnClusterProps#Tags
   */
  readonly tags?: CfnClusterPropsTags[];

}

/**
 * Converts an object of type 'CfnClusterProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnClusterProps(obj: CfnClusterProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Name': obj.name,
    'RoleArn': obj.roleArn,
    'LambdaRoleName': obj.lambdaRoleName,
    'Version': obj.version,
    'KubernetesNetworkConfig': toJson_CfnClusterPropsKubernetesNetworkConfig(obj.kubernetesNetworkConfig),
    'ResourcesVpcConfig': toJson_CfnClusterPropsResourcesVpcConfig(obj.resourcesVpcConfig),
    'EnabledClusterLoggingTypes': obj.enabledClusterLoggingTypes?.map(y => y),
    'EncryptionConfig': obj.encryptionConfig?.map(y => toJson_EncryptionConfigEntry(y)),
    'KubernetesApiAccess': toJson_CfnClusterPropsKubernetesApiAccess(obj.kubernetesApiAccess),
    'Tags': obj.tags?.map(y => toJson_CfnClusterPropsTags(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Network configuration for Amazon EKS cluster.
 *
 *
 *
 * @schema CfnClusterPropsKubernetesNetworkConfig
 */
export interface CfnClusterPropsKubernetesNetworkConfig {
  /**
   * Specify the range from which cluster services will receive IPv4 addresses.
   *
   * @schema CfnClusterPropsKubernetesNetworkConfig#ServiceIpv4Cidr
   */
  readonly serviceIpv4Cidr?: string;

}

/**
 * Converts an object of type 'CfnClusterPropsKubernetesNetworkConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnClusterPropsKubernetesNetworkConfig(obj: CfnClusterPropsKubernetesNetworkConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'ServiceIpv4Cidr': obj.serviceIpv4Cidr,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * An object that represents the virtual private cloud (VPC) configuration to use for an Amazon EKS cluster.
 *
 * @schema CfnClusterPropsResourcesVpcConfig
 */
export interface CfnClusterPropsResourcesVpcConfig {
  /**
   * Specify one or more security groups for the cross-account elastic network interfaces that Amazon EKS creates to use to allow communication between your worker nodes and the Kubernetes control plane. If you don't specify a security group, the default security group for your VPC is used.
   *
   * @schema CfnClusterPropsResourcesVpcConfig#SecurityGroupIds
   */
  readonly securityGroupIds?: string[];

  /**
   * Specify subnets for your Amazon EKS worker nodes. Amazon EKS creates cross-account elastic network interfaces in these subnets to allow communication between your worker nodes and the Kubernetes control plane.
   *
   * @schema CfnClusterPropsResourcesVpcConfig#SubnetIds
   */
  readonly subnetIds: string[];

  /**
   * Set this value to false to disable public access to your cluster's Kubernetes API server endpoint. If you disable public access, your cluster's Kubernetes API server can only receive requests from within the cluster VPC. The default value for this parameter is true , which enables public access for your Kubernetes API server.
   *
   * @schema CfnClusterPropsResourcesVpcConfig#EndpointPublicAccess
   */
  readonly endpointPublicAccess?: boolean;

  /**
   * Set this value to true to enable private access for your cluster's Kubernetes API server endpoint. If you enable private access, Kubernetes API requests from within your cluster's VPC use the private VPC endpoint. The default value for this parameter is false , which disables private access for your Kubernetes API server. If you disable private access and you have worker nodes or AWS Fargate pods in the cluster, then ensure that publicAccessCidrs includes the necessary CIDR blocks for communication with the worker nodes or Fargate pods.
   *
   * @schema CfnClusterPropsResourcesVpcConfig#EndpointPrivateAccess
   */
  readonly endpointPrivateAccess?: boolean;

  /**
   * The CIDR blocks that are allowed access to your cluster's public Kubernetes API server endpoint. Communication to the endpoint from addresses outside of the CIDR blocks that you specify is denied. The default value is 0.0.0.0/0 . If you've disabled private endpoint access and you have worker nodes or AWS Fargate pods in the cluster, then ensure that you specify the necessary CIDR blocks.
   *
   * @schema CfnClusterPropsResourcesVpcConfig#PublicAccessCidrs
   */
  readonly publicAccessCidrs?: string[];

}

/**
 * Converts an object of type 'CfnClusterPropsResourcesVpcConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnClusterPropsResourcesVpcConfig(obj: CfnClusterPropsResourcesVpcConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'SecurityGroupIds': obj.securityGroupIds?.map(y => y),
    'SubnetIds': obj.subnetIds?.map(y => y),
    'EndpointPublicAccess': obj.endpointPublicAccess,
    'EndpointPrivateAccess': obj.endpointPrivateAccess,
    'PublicAccessCidrs': obj.publicAccessCidrs?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The encryption configuration for the cluster.
 *
 * @schema EncryptionConfigEntry
 */
export interface EncryptionConfigEntry {
  /**
   * Specifies the resources to be encrypted. The only supported value is \\"secrets\\".
   *
   * @schema EncryptionConfigEntry#Resources
   */
  readonly resources?: string[];

  /**
   * @schema EncryptionConfigEntry#Provider
   */
  readonly provider?: Provider;

}

/**
 * Converts an object of type 'EncryptionConfigEntry' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_EncryptionConfigEntry(obj: EncryptionConfigEntry | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Resources': obj.resources?.map(y => y),
    'Provider': toJson_Provider(obj.provider),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnClusterPropsKubernetesApiAccess
 */
export interface CfnClusterPropsKubernetesApiAccess {
  /**
   * @schema CfnClusterPropsKubernetesApiAccess#Roles
   */
  readonly roles?: KubernetesApiAccessEntry[];

  /**
   * @schema CfnClusterPropsKubernetesApiAccess#Users
   */
  readonly users?: KubernetesApiAccessEntry[];

}

/**
 * Converts an object of type 'CfnClusterPropsKubernetesApiAccess' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnClusterPropsKubernetesApiAccess(obj: CfnClusterPropsKubernetesApiAccess | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Roles': obj.roles?.map(y => toJson_KubernetesApiAccessEntry(y)),
    'Users': obj.users?.map(y => toJson_KubernetesApiAccessEntry(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnClusterPropsTags
 */
export interface CfnClusterPropsTags {
  /**
   * @schema CfnClusterPropsTags#Value
   */
  readonly value: string;

  /**
   * @schema CfnClusterPropsTags#Key
   */
  readonly key: string;

}

/**
 * Converts an object of type 'CfnClusterPropsTags' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnClusterPropsTags(obj: CfnClusterPropsTags | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Value': obj.value,
    'Key': obj.key,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * AWS Key Management Service (AWS KMS) customer master key (CMK). Either the ARN or the alias can be used.
 *
 * @schema Provider
 */
export interface Provider {
  /**
   * Amazon Resource Name (ARN) or alias of the customer master key (CMK). The CMK must be symmetric, created in the same region as the cluster, and if the CMK was created in a different account, the user must have access to the CMK.
   *
   * @schema Provider#KeyArn
   */
  readonly keyArn?: string;

}

/**
 * Converts an object of type 'Provider' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_Provider(obj: Provider | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'KeyArn': obj.keyArn,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema KubernetesApiAccessEntry
 */
export interface KubernetesApiAccessEntry {
  /**
   * @schema KubernetesApiAccessEntry#Arn
   */
  readonly arn?: string;

  /**
   * @schema KubernetesApiAccessEntry#Username
   */
  readonly username?: string;

  /**
   * @schema KubernetesApiAccessEntry#Groups
   */
  readonly groups?: string[];

}

/**
 * Converts an object of type 'KubernetesApiAccessEntry' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_KubernetesApiAccessEntry(obj: KubernetesApiAccessEntry | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Arn': obj.arn,
    'Username': obj.username,
    'Groups': obj.groups?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * A CloudFormation \`AWSQS::EKS::Cluster\`
 *
 * @cloudformationResource AWSQS::EKS::Cluster
 * @stability external
 * @link https://github.com/aws-quickstart/quickstart-amazon-eks-cluster-resource-provider.git
 */
export class CfnCluster extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = \\"AWSQS::EKS::Cluster\\";

  /**
   * \`AWSQS::EKS::Cluster.Name\`
   * A unique name for your cluster.
   * @link https://github.com/aws-quickstart/quickstart-amazon-eks-cluster-resource-provider.git
   */
  public readonly name: string | undefined;
  /**
   * \`AWSQS::EKS::Cluster.RoleArn\`
   * Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role. This provides permissions for Amazon EKS to call other AWS APIs.
   * @link https://github.com/aws-quickstart/quickstart-amazon-eks-cluster-resource-provider.git
   */
  public readonly roleArn: string;
  /**
   * \`AWSQS::EKS::Cluster.LambdaRoleName\`
   * Name of the AWS Identity and Access Management (IAM) role used for clusters that have the public endpoint disabled. this provides permissions for Lambda to be invoked and attach to the cluster VPC
   * @link https://github.com/aws-quickstart/quickstart-amazon-eks-cluster-resource-provider.git
   */
  public readonly lambdaRoleName: string | undefined;
  /**
   * \`AWSQS::EKS::Cluster.Version\`
   * Desired Kubernetes version for your cluster. If you don't specify this value, the cluster uses the latest version from Amazon EKS.
   * @link https://github.com/aws-quickstart/quickstart-amazon-eks-cluster-resource-provider.git
   */
  public readonly version: string | undefined;
  /**
   * \`AWSQS::EKS::Cluster.KubernetesNetworkConfig\`
   * Network configuration for Amazon EKS cluster.
   * @link https://github.com/aws-quickstart/quickstart-amazon-eks-cluster-resource-provider.git
   */
  public readonly kubernetesNetworkConfig: any | undefined;
  /**
   * \`AWSQS::EKS::Cluster.ResourcesVpcConfig\`
   * An object that represents the virtual private cloud (VPC) configuration to use for an Amazon EKS cluster.
   * @link https://github.com/aws-quickstart/quickstart-amazon-eks-cluster-resource-provider.git
   */
  public readonly resourcesVpcConfig: any;
  /**
   * \`AWSQS::EKS::Cluster.EnabledClusterLoggingTypes\`
   * Enables exporting of logs from the Kubernetes control plane to Amazon CloudWatch Logs. By default, logs from the cluster control plane are not exported to CloudWatch Logs. The valid log types are api, audit, authenticator, controllerManager, and scheduler.
   * @link https://github.com/aws-quickstart/quickstart-amazon-eks-cluster-resource-provider.git
   */
  public readonly enabledClusterLoggingTypes: string[] | undefined;
  /**
   * \`AWSQS::EKS::Cluster.EncryptionConfig\`
   * Encryption configuration for the cluster.
   * @link https://github.com/aws-quickstart/quickstart-amazon-eks-cluster-resource-provider.git
   */
  public readonly encryptionConfig: EncryptionConfigEntry[] | undefined;
  /**
   * \`AWSQS::EKS::Cluster.KubernetesApiAccess\`
   * @link https://github.com/aws-quickstart/quickstart-amazon-eks-cluster-resource-provider.git
   */
  public readonly kubernetesApiAccess: any | undefined;
  /**
   * \`AWSQS::EKS::Cluster.Tags\`
   * @link https://github.com/aws-quickstart/quickstart-amazon-eks-cluster-resource-provider.git
   */
  public readonly tags: any[] | undefined;
  /**
   * Attribute \`AWSQS::EKS::Cluster.Arn\`
   * @link https://github.com/aws-quickstart/quickstart-amazon-eks-cluster-resource-provider.git
   */
  public readonly attrArn: string;
  /**
   * Attribute \`AWSQS::EKS::Cluster.Endpoint\`
   * @link https://github.com/aws-quickstart/quickstart-amazon-eks-cluster-resource-provider.git
   */
  public readonly attrEndpoint: string;
  /**
   * Attribute \`AWSQS::EKS::Cluster.ClusterSecurityGroupId\`
   * @link https://github.com/aws-quickstart/quickstart-amazon-eks-cluster-resource-provider.git
   */
  public readonly attrClusterSecurityGroupId: string;
  /**
   * Attribute \`AWSQS::EKS::Cluster.CertificateAuthorityData\`
   * @link https://github.com/aws-quickstart/quickstart-amazon-eks-cluster-resource-provider.git
   */
  public readonly attrCertificateAuthorityData: string;
  /**
   * Attribute \`AWSQS::EKS::Cluster.EncryptionConfigKeyArn\`
   * @link https://github.com/aws-quickstart/quickstart-amazon-eks-cluster-resource-provider.git
   */
  public readonly attrEncryptionConfigKeyArn: string;
  /**
   * Attribute \`AWSQS::EKS::Cluster.OIDCIssuerURL\`
   * @link https://github.com/aws-quickstart/quickstart-amazon-eks-cluster-resource-provider.git
   */
  public readonly attrOIDCIssuerURL: string;

  /**
   * Create a new \`AWSQS::EKS::Cluster\`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: cdk.Construct, id: string, props: CfnClusterProps) {
    super(scope, id, { type: CfnCluster.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnClusterProps(props)! });

    this.name = props.name;
    this.roleArn = props.roleArn;
    this.lambdaRoleName = props.lambdaRoleName;
    this.version = props.version;
    this.kubernetesNetworkConfig = props.kubernetesNetworkConfig;
    this.resourcesVpcConfig = props.resourcesVpcConfig;
    this.enabledClusterLoggingTypes = props.enabledClusterLoggingTypes;
    this.encryptionConfig = props.encryptionConfig;
    this.kubernetesApiAccess = props.kubernetesApiAccess;
    this.tags = props.tags;
    this.attrArn = cdk.Token.asString(this.getAtt('Arn'));
    this.attrEndpoint = cdk.Token.asString(this.getAtt('Endpoint'));
    this.attrClusterSecurityGroupId = cdk.Token.asString(this.getAtt('ClusterSecurityGroupId'));
    this.attrCertificateAuthorityData = cdk.Token.asString(this.getAtt('CertificateAuthorityData'));
    this.attrEncryptionConfigKeyArn = cdk.Token.asString(this.getAtt('EncryptionConfigKeyArn'));
    this.attrOIDCIssuerURL = cdk.Token.asString(this.getAtt('OIDCIssuerURL'));
  }
}"
`;
